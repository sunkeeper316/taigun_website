{"version":3,"file":"headlessui.umd.production.min.js","sources":["../src/utils/match.ts","../src/utils/render.ts","../src/keyboard.ts","../src/hooks/use-id.ts","../src/utils/focus-management.ts","../src/hooks/use-window-event.ts","../src/internal/dom-containers.ts","../src/hooks/use-focus-trap.ts","../src/hooks/use-inert-others.ts","../src/internal/stack-context.ts","../src/internal/portal-force-root.ts","../src/components/portal/portal.ts","../src/components/description/description.ts","../src/components/dialog/dialog.ts","../src/utils/dom.ts","../src/components/disclosure/disclosure.ts","../src/utils/calculate-active-index.ts","../src/components/listbox/listbox.ts","../src/components/focus-trap/focus-trap.ts","../src/utils/resolve-prop-value.ts","../src/components/menu/menu.ts","../src/hooks/use-tree-walker.ts","../src/components/popover/popover.ts","../src/components/label/label.ts","../src/components/radio-group/radio-group.ts","../src/components/transitions/utils/transition.ts","../src/components/switch/switch.ts","../src/utils/disposables.ts","../src/utils/once.ts","../src/components/transitions/transition.ts"],"sourcesContent":["export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n","import { h, cloneVNode, Slots } from 'vue'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\nexport function render({\n  visible = true,\n  features = Features.None,\n  ...main\n}: {\n  props: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n} & {\n  features?: Features\n  visible?: boolean\n}) {\n  // Visible always render\n  if (visible) return _render(main)\n\n  if (features & Features.Static) {\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (main.props.static) return _render(main)\n  }\n\n  if (features & Features.RenderStrategy) {\n    let strategy = main.props.unmount ?? true ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render({\n          ...main,\n          props: { ...main.props, hidden: true, style: { display: 'none' } },\n        })\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(main)\n}\n\nfunction _render({\n  props,\n  attrs,\n  slots,\n  slot,\n  name,\n}: {\n  props: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n}) {\n  let { as, ...passThroughProps } = omit(props, ['unmount', 'static'])\n\n  let children = slots.default?.(slot)\n\n  if (as === 'template') {\n    if (Object.keys(passThroughProps).length > 0 || Object.keys(attrs).length > 0) {\n      let [firstChild, ...other] = children ?? []\n\n      if (!isValidElement(firstChild) || other.length > 0) {\n        throw new Error(\n          [\n            'Passing props on \"template\"!',\n            '',\n            `The current component <${name} /> is rendering a \"template\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(passThroughProps)\n              .concat(Object.keys(attrs))\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"template\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      return cloneVNode(firstChild, passThroughProps as Record<string, any>)\n    }\n\n    if (Array.isArray(children) && children.length === 1) {\n      return children[0]\n    }\n\n    return children\n  }\n\n  return h(as, passThroughProps, children)\n}\n\nfunction omit<T extends Record<any, any>>(object: T, keysToOmit: string[] = []) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone\n}\n\nfunction isValidElement(input: any): boolean {\n  if (input == null) return false // No children\n  if (typeof input.type === 'string') return true // 'div', 'span', ...\n  if (typeof input.type === 'object') return true // Other components\n  if (typeof input.type === 'function') return true // Built-ins like Transition\n  return false // Comments, strings, ...\n}\n","// TODO: This must already exist somewhere, right? ðŸ¤”\n// Ref: https://www.w3.org/TR/uievents-key/#named-key-attribute-values\nexport enum Keys {\n  Space = ' ',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Backspace = 'Backspace',\n\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n\n  Home = 'Home',\n  End = 'End',\n\n  PageUp = 'PageUp',\n  PageDown = 'PageDown',\n\n  Tab = 'Tab',\n}\n","let id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  return generateId()\n}\n","import { match } from './match'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        selector => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : selector => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  Error,\n  Overflow,\n  Success,\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector))\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === document.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\nexport function focusIn(container: HTMLElement | HTMLElement[], focus: Focus) {\n  let elements = Array.isArray(container) ? container : getFocusableElements(container)\n  let active = document.activeElement as HTMLElement\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== document.activeElement)\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on wether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  return FocusResult.Success\n}\n","import { onUnmounted } from 'vue'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  window.addEventListener(type, listener, options)\n  onUnmounted(() => window.removeEventListener(type, listener, options))\n}\n","export function contains(containers: Set<HTMLElement>, element: HTMLElement) {\n  for (let container of containers) {\n    if (container.contains(element)) return true\n  }\n\n  return false\n}\n","import {\n  onUnmounted,\n  onUpdated,\n  ref,\n  watchEffect,\n\n  // Types\n  Ref,\n} from 'vue'\n\nimport { Keys } from '../keyboard'\nimport { focusElement, focusIn, Focus, FocusResult } from '../utils/focus-management'\nimport { useWindowEvent } from '../hooks/use-window-event'\nimport { contains } from '../internal/dom-containers'\n\nexport function useFocusTrap(\n  containers: Ref<Set<HTMLElement>>,\n  enabled: Ref<boolean> = ref(true),\n  options: Ref<{ initialFocus?: HTMLElement | null }> = ref({})\n) {\n  let restoreElement = ref<HTMLElement | null>(\n    typeof window !== 'undefined' ? (document.activeElement as HTMLElement) : null\n  )\n  let previousActiveElement = ref<HTMLElement | null>(null)\n\n  function handleFocus() {\n    if (!enabled.value) return\n    if (containers.value.size !== 1) return\n    let { initialFocus } = options.value\n\n    let activeElement = document.activeElement as HTMLElement\n\n    if (initialFocus) {\n      if (initialFocus === activeElement) {\n        return // Initial focus ref is already the active element\n      }\n    } else if (contains(containers.value, activeElement)) {\n      return // Already focused within Dialog\n    }\n\n    restoreElement.value = activeElement\n\n    // Try to focus the initialFocus ref\n    if (initialFocus) {\n      focusElement(initialFocus)\n    } else {\n      let couldFocus = false\n      for (let container of containers.value) {\n        let result = focusIn(container, Focus.First)\n        if (result === FocusResult.Success) {\n          couldFocus = true\n          break\n        }\n      }\n\n      if (!couldFocus) throw new Error('There are no focusable elements inside the <FocusTrap />')\n    }\n\n    previousActiveElement.value = document.activeElement as HTMLElement\n  }\n\n  // Restore when `enabled` becomes false\n  function restore() {\n    focusElement(restoreElement.value)\n    restoreElement.value = null\n    previousActiveElement.value = null\n  }\n\n  // Handle initial focus\n  watchEffect(handleFocus)\n\n  onUpdated(() => {\n    enabled.value ? handleFocus() : restore()\n  })\n  onUnmounted(restore)\n\n  // Handle Tab & Shift+Tab keyboard events\n  useWindowEvent('keydown', event => {\n    if (!enabled.value) return\n    if (event.key !== Keys.Tab) return\n    if (!document.activeElement) return\n    if (containers.value.size !== 1) return\n\n    event.preventDefault()\n\n    for (let element of containers.value) {\n      let result = focusIn(\n        element,\n        (event.shiftKey ? Focus.Previous : Focus.Next) | Focus.WrapAround\n      )\n\n      if (result === FocusResult.Success) {\n        previousActiveElement.value = document.activeElement as HTMLElement\n        break\n      }\n    }\n  })\n\n  // Prevent programmatically escaping\n  useWindowEvent(\n    'focus',\n    event => {\n      if (!enabled.value) return\n      if (containers.value.size !== 1) return\n\n      let previous = previousActiveElement.value\n      if (!previous) return\n\n      let toElement = event.target as HTMLElement | null\n\n      if (toElement && toElement instanceof HTMLElement) {\n        if (!contains(containers.value, toElement)) {\n          event.preventDefault()\n          event.stopPropagation()\n          focusElement(previous)\n        } else {\n          previousActiveElement.value = toElement\n          focusElement(toElement)\n        }\n      } else {\n        focusElement(previousActiveElement.value)\n      }\n    },\n    true\n  )\n}\n","import {\n  ref,\n  watchEffect,\n\n  // Types\n  Ref,\n} from 'vue'\n\n// TODO: Figure out a nice way to attachTo document.body in the tests without automagically inserting a div with data-v-app\nlet CHILDREN_SELECTOR = process.env.NODE_ENV === 'test' ? '[data-v-app=\"\"] > *' : 'body > *'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: Ref<TElement | null>,\n  enabled: Ref<boolean> = ref(true)\n) {\n  watchEffect(onInvalidate => {\n    if (!enabled.value) return\n    if (!container.value) return\n\n    let element = container.value\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    document.querySelectorAll(CHILDREN_SELECTOR).forEach(child => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    onInvalidate(() => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll(CHILDREN_SELECTOR).forEach(child => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    })\n  })\n}\n","import {\n  inject,\n  provide,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\ntype OnUpdate = (message: StackMessage, element: HTMLElement) => void\n\nlet StackContext = Symbol('StackContext') as InjectionKey<OnUpdate>\n\nexport enum StackMessage {\n  AddElement,\n  RemoveElement,\n}\n\nexport function useStackContext() {\n  return inject(StackContext, () => {})\n}\n\nexport function useElemenStack(element: Ref<HTMLElement | null> | null) {\n  let notify = useStackContext()\n\n  watchEffect(onInvalidate => {\n    let domElement = element?.value\n    if (!domElement) return\n\n    notify(StackMessage.AddElement, domElement)\n    onInvalidate(() => notify(StackMessage.RemoveElement, domElement!))\n  })\n}\n\nexport function useStackProvider(onUpdate?: OnUpdate) {\n  let parentUpdate = useStackContext()\n\n  function notify(...args: Parameters<OnUpdate>) {\n    // Notify our layer\n    onUpdate?.(...args)\n\n    // Notify the parent\n    parentUpdate(...args)\n  }\n\n  provide(StackContext, notify)\n}\n","import {\n  defineComponent,\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n} from 'vue'\nimport { render } from '../utils/render'\n\nlet ForcePortalRootContext = Symbol('ForcePortalRootContext') as InjectionKey<Boolean>\n\nexport function usePortalRoot() {\n  return inject(ForcePortalRootContext, false)\n}\n\nexport let ForcePortalRoot = defineComponent({\n  name: 'ForcePortalRoot',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    force: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    provide(ForcePortalRootContext, props.force)\n\n    return () => {\n      let { force, ...passThroughProps } = props\n      return render({ props: passThroughProps, slot: {}, slots, attrs, name: 'ForcePortalRoot' })\n    }\n  },\n})\n","import {\n  Teleport,\n  defineComponent,\n  h,\n  inject,\n  onUnmounted,\n  provide,\n  reactive,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { useElemenStack, useStackProvider } from '../../internal/stack-context'\nimport { usePortalRoot } from '../../internal/portal-force-root'\n\n// ---\n\nfunction getPortalRoot() {\n  let existingRoot = document.getElementById('headlessui-portal-root')\n  if (existingRoot) return existingRoot\n\n  let root = document.createElement('div')\n  root.setAttribute('id', 'headlessui-portal-root')\n  return document.body.appendChild(root)\n}\n\nexport let Portal = defineComponent({\n  name: 'Portal',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let forcePortalRoot = usePortalRoot()\n    let groupContext = inject(PortalGroupContext, null)\n    let myTarget = ref(\n      forcePortalRoot === true\n        ? getPortalRoot()\n        : groupContext === null\n        ? getPortalRoot()\n        : groupContext.resolveTarget()\n    )\n\n    watchEffect(() => {\n      if (forcePortalRoot) return\n      if (groupContext === null) return\n      myTarget.value = groupContext.resolveTarget()\n    })\n\n    let element = ref(null)\n    useElemenStack(element)\n\n    onUnmounted(() => {\n      let root = document.getElementById('headlessui-portal-root')\n      if (!root) return\n      if (myTarget.value !== root) return\n\n      if (myTarget.value.children.length <= 0) {\n        myTarget.value.parentElement?.removeChild(myTarget.value)\n      }\n    })\n\n    useStackProvider()\n\n    return () => {\n      if (myTarget.value === null) return null\n\n      let propsWeControl = {\n        ref: element,\n      }\n\n      return h(\n        // @ts-expect-error Children can be an object, but TypeScript is not happy\n        // with it. Once this is fixed upstream we can remove this assertion.\n        Teleport,\n        { to: myTarget.value },\n        render({\n          props: { ...props, ...propsWeControl },\n          slot: {},\n          attrs,\n          slots,\n          name: 'Portal',\n        })\n      )\n    }\n  },\n})\n\n// ---\n\nlet PortalGroupContext = Symbol('PortalGroupContext') as InjectionKey<{\n  resolveTarget(): HTMLElement | null\n}>\n\nexport let PortalGroup = defineComponent({\n  name: 'PortalGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    target: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  setup(props, { attrs, slots }) {\n    let api = reactive({\n      resolveTarget() {\n        return props.target\n      },\n    })\n\n    provide(PortalGroupContext, api)\n\n    return () => {\n      let { target: _, ...passThroughProps } = props\n\n      return render({ props: passThroughProps, slot: {}, attrs, slots, name: 'PortalGroup' })\n    }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet DescriptionContext = Symbol('DescriptionContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Record<string, any>\n  name: string\n  props: Record<string, any>\n}>\n\nfunction useDescriptionContext() {\n  let context = inject(DescriptionContext, null)\n  if (context === null) {\n    throw new Error('Missing parent')\n  }\n  return context\n}\n\nexport function useDescriptions({\n  slot = {},\n  name = 'Description',\n  props = {},\n}: {\n  slot?: Record<string, unknown>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let descriptionIds = ref<string[]>([])\n\n  function register(value: string) {\n    descriptionIds.value.push(value)\n\n    return () => {\n      let idx = descriptionIds.value.indexOf(value)\n      if (idx === -1) return\n      descriptionIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(DescriptionContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() =>\n    descriptionIds.value.length > 0 ? descriptionIds.value.join(' ') : undefined\n  )\n}\n\n// ---\n\nexport let Description = defineComponent({\n  name: 'Description',\n  props: {\n    as: { type: [Object, String], default: 'p' },\n  },\n  render() {\n    let { name = 'Description', slot = {}, props = {} } = this.context\n    let passThroughProps = this.$props\n    let propsWeControl = {\n      ...Object.entries(props).reduce(\n        (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n        {}\n      ),\n      id: this.id,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name,\n    })\n  },\n  setup() {\n    let context = useDescriptionContext()\n    let id = `headlessui-description-${useId()}`\n\n    onMounted(() => onUnmounted(context.register(id)))\n\n    return { id, context }\n  },\n})\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\nimport {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  onUpdated,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n  Ref,\n} from 'vue'\n\nimport { render, Features } from '../../utils/render'\nimport { Keys } from '../../keyboard'\nimport { useId } from '../../hooks/use-id'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { contains } from '../../internal/dom-containers'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { Portal, PortalGroup } from '../portal/portal'\nimport { StackMessage, useStackProvider } from '../../internal/stack-context'\nimport { match } from '../../utils/match'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { Description, useDescriptions } from '../description/description'\nimport { dom } from '../../utils/dom'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  dialogState: Ref<DialogStates>\n\n  titleId: Ref<string | null>\n\n  setTitleId(id: string | null): void\n\n  close(): void\n}\n\nlet DialogContext = Symbol('DialogContext') as InjectionKey<StateDefinition>\n\nfunction useDialogContext(component: string) {\n  let context = inject(DialogContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Dialog /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\n// ---\n\nlet Missing = 'DC8F892D-2EBD-447C-A4C8-A03058436FF4'\n\nexport let Dialog = defineComponent({\n  name: 'Dialog',\n  inheritAttrs: false, // Manually handling this\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    open: { type: Boolean, default: Missing },\n    initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  emits: ['close'],\n  render() {\n    let propsWeControl = {\n      // Manually passthrough the attributes, because Vue can't automatically pass\n      // it to the underlying div because of all the wrapper components below.\n      ...this.$attrs,\n      ref: 'el',\n      id: this.id,\n      role: 'dialog',\n      'aria-modal': this.dialogState === DialogStates.Open ? true : undefined,\n      'aria-labelledby': this.titleId,\n      'aria-describedby': this.describedby,\n    }\n    let { open, initialFocus, ...passThroughProps } = this.$props\n    let slot = { open: this.dialogState === DialogStates.Open }\n\n    return h(ForcePortalRoot, { force: true }, () =>\n      h(Portal, () =>\n        h(PortalGroup, { target: this.dialogRef }, () =>\n          h(ForcePortalRoot, { force: false }, () =>\n            render({\n              props: { ...passThroughProps, ...propsWeControl },\n              slot,\n              attrs: this.$attrs,\n              slots: this.$slots,\n              visible: open,\n              features: Features.RenderStrategy | Features.Static,\n              name: 'Dialog',\n            })\n          )\n        )\n      )\n    )\n  },\n  setup(props, { emit }) {\n    let containers = ref<Set<HTMLElement>>(new Set())\n\n    // Validations\n    // @ts-expect-error We are comparing to a uuid stirng at runtime\n    let hasOpen = props.open !== Missing\n\n    if (!hasOpen) {\n      throw new Error(`You forgot to provide an \\`open\\` prop to the \\`Dialog\\`.`)\n    }\n\n    if (typeof props.open !== 'boolean') {\n      throw new Error(\n        `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${\n          props.open === Missing ? undefined : props.open\n        }`\n      )\n    }\n\n    let dialogState = computed(() => (props.open ? DialogStates.Open : DialogStates.Closed))\n    let internalDialogRef = ref<HTMLDivElement | null>(null)\n    let enabled = ref(dialogState.value === DialogStates.Open)\n\n    onUpdated(() => {\n      enabled.value = dialogState.value === DialogStates.Open\n    })\n\n    let id = `headlessui-dialog-${useId()}`\n    let focusTrapOptions = computed(() => ({ initialFocus: props.initialFocus }))\n\n    useFocusTrap(containers, enabled, focusTrapOptions)\n    useInertOthers(internalDialogRef, enabled)\n    useStackProvider((message, element) => {\n      return match(message, {\n        [StackMessage.AddElement]() {\n          containers.value.add(element)\n        },\n        [StackMessage.RemoveElement]() {\n          containers.value.delete(element)\n        },\n      })\n    })\n\n    let describedby = useDescriptions({\n      name: 'DialogDescription',\n      slot: { open: props.open },\n    })\n\n    let titleId = ref<StateDefinition['titleId']['value']>(null)\n\n    let api = {\n      titleId,\n      dialogState,\n      setTitleId(id: string | null) {\n        if (titleId.value === id) return\n        titleId.value = id\n      },\n      close() {\n        emit('close', false)\n      },\n    }\n\n    provide(DialogContext, api)\n\n    // Handle outside click\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n\n      if (dialogState.value !== DialogStates.Open) return\n      if (containers.value.size !== 1) return\n      if (contains(containers.value, target)) return\n\n      api.close()\n      nextTick(() => target?.focus())\n    })\n\n    // Handle `Escape` to close\n    useWindowEvent('keydown', event => {\n      if (event.key !== Keys.Escape) return\n      if (dialogState.value !== DialogStates.Open) return\n      if (containers.value.size > 1) return // 1 is myself, otherwise other elements in the Stack\n      api.close()\n    })\n\n    // Scroll lock\n    watchEffect(onInvalidate => {\n      if (dialogState.value !== DialogStates.Open) return\n\n      let overflow = document.documentElement.style.overflow\n      let paddingRight = document.documentElement.style.paddingRight\n\n      let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth\n\n      document.documentElement.style.overflow = 'hidden'\n      document.documentElement.style.paddingRight = `${scrollbarWidth}px`\n\n      onInvalidate(() => {\n        document.documentElement.style.overflow = overflow\n        document.documentElement.style.paddingRight = paddingRight\n      })\n    })\n\n    // Trigger close when the FocusTrap gets hidden\n    watchEffect(onInvalidate => {\n      if (dialogState.value !== DialogStates.Open) return\n      let container = dom(internalDialogRef)\n      if (!container) return\n\n      let observer = new IntersectionObserver(entries => {\n        for (let entry of entries) {\n          if (\n            entry.boundingClientRect.x === 0 &&\n            entry.boundingClientRect.y === 0 &&\n            entry.boundingClientRect.width === 0 &&\n            entry.boundingClientRect.height === 0\n          ) {\n            api.close()\n          }\n        }\n      })\n\n      observer.observe(container)\n\n      onInvalidate(() => observer.disconnect())\n    })\n\n    return {\n      id,\n      el: internalDialogRef,\n      dialogRef: internalDialogRef,\n      containers,\n      dialogState,\n      titleId,\n      describedby,\n    }\n  },\n})\n\n// ---\n\nexport let DialogOverlay = defineComponent({\n  name: 'DialogOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  render() {\n    let api = useDialogContext('DialogOverlay')\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      'aria-hidden': true,\n      onClick: this.handleClick,\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: { open: api.dialogState.value === DialogStates.Open },\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DialogOverlay',\n    })\n  },\n  setup() {\n    let api = useDialogContext('DialogOverlay')\n    let id = `headlessui-dialog-overlay-${useId()}`\n\n    return {\n      id,\n      handleClick() {\n        api.close()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DialogTitle = defineComponent({\n  name: 'DialogTitle',\n  props: {\n    as: { type: [Object, String], default: 'h2' },\n  },\n  render() {\n    let api = useDialogContext('DialogTitle')\n    let propsWeControl = { id: this.id }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: { open: api.dialogState.value === DialogStates.Open },\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DialogTitle',\n    })\n  },\n  setup() {\n    let api = useDialogContext('DialogTitle')\n    let id = `headlessui-dialog-title-${useId()}`\n\n    onMounted(() => {\n      api.setTitleId(id)\n      onUnmounted(() => api.setTitleId(null))\n    })\n\n    return { id }\n  },\n})\n\n// ---\n\nexport let DialogDescription = Description\n","import { Ref } from 'vue'\n\nexport function dom<T extends HTMLElement>(ref?: Ref<T | null>): T | null {\n  if (ref == null) return null\n  if (ref.value == null) return null\n  return ((ref as Ref<T & { $el: unknown }>).value.$el ?? ref.value) as T | null\n}\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\nimport { defineComponent, ref, provide, inject, InjectionKey, Ref, computed } from 'vue'\n\nimport { Keys } from '../../keyboard'\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { dom } from '../../utils/dom'\n\nenum DisclosureStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  disclosureState: Ref<DisclosureStates>\n  panelRef: Ref<HTMLElement | null>\n\n  // State mutators\n  toggleDisclosure(): void\n}\n\nlet DisclosureContext = Symbol('DisclosureContext') as InjectionKey<StateDefinition>\n\nfunction useDisclosureContext(component: string) {\n  let context = inject(DisclosureContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Disclosure /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let Disclosure = defineComponent({\n  name: 'Disclosure',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n  },\n  setup(props, { slots, attrs }) {\n    let { ...passThroughProps } = props\n\n    let disclosureState = ref<StateDefinition['disclosureState']['value']>(DisclosureStates.Closed)\n    let panelRef = ref<StateDefinition['panelRef']['value']>(null)\n\n    let api = {\n      disclosureState,\n      panelRef,\n      toggleDisclosure() {\n        disclosureState.value = match(disclosureState.value, {\n          [DisclosureStates.Open]: DisclosureStates.Closed,\n          [DisclosureStates.Closed]: DisclosureStates.Open,\n        })\n      },\n    } as StateDefinition\n\n    provide(DisclosureContext, api)\n\n    return () => {\n      let slot = { open: disclosureState.value === DisclosureStates.Open }\n      return render({ props: passThroughProps, slot, slots, attrs, name: 'Disclosure' })\n    }\n  },\n})\n\n// ---\n\nexport let DisclosureButton = defineComponent({\n  name: 'DisclosureButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  render() {\n    let api = useDisclosureContext('DisclosureButton')\n\n    let slot = { open: api.disclosureState.value === DisclosureStates.Open }\n    let propsWeControl = {\n      id: this.id,\n      type: 'button',\n      'aria-expanded': api.disclosureState.value === DisclosureStates.Open ? true : undefined,\n      'aria-controls': this.ariaControls,\n      onClick: this.handleClick,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DisclosureButton',\n    })\n  },\n  setup(props) {\n    let api = useDisclosureContext('DisclosureButton')\n    let buttonId = `headlessui-disclosure-button-${useId()}`\n    let ariaControls = computed(() => dom(api.panelRef)?.id ?? undefined)\n\n    return {\n      id: buttonId,\n      ariaControls,\n      handleClick() {\n        if (props.disabled) return\n        api.toggleDisclosure()\n      },\n      handleKeyDown(event: KeyboardEvent) {\n        if (props.disabled) return\n\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault()\n            event.stopPropagation()\n            api.toggleDisclosure()\n            break\n        }\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        switch (event.key) {\n          case Keys.Space:\n            // Required for firefox, event.preventDefault() in handleKeyDown for\n            // the Space key doesn't cancel the handleKeyUp, which in turn\n            // triggers a *click*.\n            event.preventDefault()\n            break\n        }\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DisclosurePanel = defineComponent({\n  name: 'DisclosurePanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useDisclosureContext('DisclosurePanel')\n\n    let slot = { open: api.disclosureState.value === DisclosureStates.Open }\n    let propsWeControl = { id: this.id, ref: 'el' }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: slot.open,\n      name: 'DisclosurePanel',\n    })\n  },\n  setup() {\n    let api = useDisclosureContext('DisclosurePanel')\n    let panelId = `headlessui-disclosure-panel-${useId()}`\n\n    return { id: panelId, el: api.panelRef }\n  },\n})\n","function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x)\n}\n\nexport enum Focus {\n  /** Focus the first non-disabled item. */\n  First,\n\n  /** Focus the previous non-disabled item. */\n  Previous,\n\n  /** Focus the next non-disabled item. */\n  Next,\n\n  /** Focus the last non-disabled item. */\n  Last,\n\n  /** Focus a specific item based on the `id` of the item. */\n  Specific,\n\n  /** Focus no items at all. */\n  Nothing,\n}\n\nexport function calculateActiveIndex<TItem>(\n  action: { focus: Focus.Specific; id: string } | { focus: Exclude<Focus, Focus.Specific> },\n  resolvers: {\n    resolveItems(): TItem[]\n    resolveActiveIndex(): number | null\n    resolveId(item: TItem): string\n    resolveDisabled(item: TItem): boolean\n  }\n) {\n  let items = resolvers.resolveItems()\n  if (items.length <= 0) return null\n\n  let currentActiveIndex = resolvers.resolveActiveIndex()\n  let activeIndex = currentActiveIndex ?? -1\n\n  let nextActiveIndex = (() => {\n    switch (action.focus) {\n      case Focus.First:\n        return items.findIndex(item => !resolvers.resolveDisabled(item))\n\n      case Focus.Previous: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex((item, idx, all) => {\n            if (activeIndex !== -1 && all.length - idx - 1 >= activeIndex) return false\n            return !resolvers.resolveDisabled(item)\n          })\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Next:\n        return items.findIndex((item, idx) => {\n          if (idx <= activeIndex) return false\n          return !resolvers.resolveDisabled(item)\n        })\n\n      case Focus.Last: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex(item => !resolvers.resolveDisabled(item))\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Specific:\n        return items.findIndex(item => resolvers.resolveId(item) === action.id)\n\n      case Focus.Nothing:\n        return null\n\n      default:\n        assertNever(action)\n    }\n  })()\n\n  return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex\n}\n","import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  nextTick,\n  InjectionKey,\n  Ref,\n  ComputedRef,\n  watchEffect,\n  toRaw,\n  watch,\n} from 'vue'\n\nimport { Features, render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { calculateActiveIndex, Focus } from '../../utils/calculate-active-index'\nimport { resolvePropValue } from '../../utils/resolve-prop-value'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype ListboxOptionDataRef = Ref<{ textValue: string; disabled: boolean; value: unknown }>\ntype StateDefinition = {\n  // State\n  listboxState: Ref<ListboxStates>\n  value: ComputedRef<unknown>\n  labelRef: Ref<HTMLLabelElement | null>\n  buttonRef: Ref<HTMLButtonElement | null>\n  optionsRef: Ref<HTMLDivElement | null>\n  disabled: Ref<boolean>\n  options: Ref<{ id: string; dataRef: ListboxOptionDataRef }[]>\n  searchQuery: Ref<string>\n  activeOptionIndex: Ref<number | null>\n\n  // State mutators\n  closeListbox(): void\n  openListbox(): void\n  goToOption(focus: Focus, id?: string): void\n  search(value: string): void\n  clearSearch(): void\n  registerOption(id: string, dataRef: ListboxOptionDataRef): void\n  unregisterOption(id: string): void\n  select(value: unknown): void\n}\n\nlet ListboxContext = Symbol('ListboxContext') as InjectionKey<StateDefinition>\n\nfunction useListboxContext(component: string) {\n  let context = inject(ListboxContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Listbox /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let Listbox = defineComponent({\n  name: 'Listbox',\n  emits: ['update:modelValue'],\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: [Boolean], default: false },\n    modelValue: { type: [Object, String, Number, Boolean], default: null },\n  },\n  setup(props, { slots, attrs, emit }) {\n    let { modelValue, disabled, ...passThroughProps } = props\n    let listboxState = ref<StateDefinition['listboxState']['value']>(ListboxStates.Closed)\n    let labelRef = ref<StateDefinition['labelRef']['value']>(null)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let optionsRef = ref<StateDefinition['optionsRef']['value']>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeOptionIndex = ref<StateDefinition['activeOptionIndex']['value']>(null)\n\n    let value = computed(() => props.modelValue)\n\n    let api = {\n      listboxState,\n      value,\n      labelRef,\n      buttonRef,\n      optionsRef,\n      disabled,\n      options,\n      searchQuery,\n      activeOptionIndex,\n      closeListbox() {\n        if (disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        listboxState.value = ListboxStates.Closed\n        activeOptionIndex.value = null\n      },\n      openListbox() {\n        if (disabled) return\n        if (listboxState.value === ListboxStates.Open) return\n        listboxState.value = ListboxStates.Open\n      },\n      goToOption(focus: Focus, id?: string) {\n        if (disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        let nextActiveOptionIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => options.value,\n            resolveActiveIndex: () => activeOptionIndex.value,\n            resolveId: option => option.id,\n            resolveDisabled: option => option.dataRef.disabled,\n          }\n        )\n\n        if (searchQuery.value === '' && activeOptionIndex.value === nextActiveOptionIndex) return\n        searchQuery.value = ''\n        activeOptionIndex.value = nextActiveOptionIndex\n      },\n      search(value: string) {\n        if (disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        searchQuery.value += value\n\n        let match = options.value.findIndex(\n          option =>\n            !option.dataRef.disabled && option.dataRef.textValue.startsWith(searchQuery.value)\n        )\n\n        if (match === -1 || match === activeOptionIndex.value) return\n        activeOptionIndex.value = match\n      },\n      clearSearch() {\n        if (disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        if (searchQuery.value === '') return\n\n        searchQuery.value = ''\n      },\n      registerOption(id: string, dataRef: ListboxOptionDataRef) {\n        // @ts-expect-error The expected type comes from property 'dataRef' which is declared here on type '{ id: string; dataRef: { textValue: string; disabled: boolean; }; }'\n        options.value.push({ id, dataRef })\n      },\n      unregisterOption(id: string) {\n        let nextOptions = options.value.slice()\n        let currentActiveOption =\n          activeOptionIndex.value !== null ? nextOptions[activeOptionIndex.value] : null\n        let idx = nextOptions.findIndex(a => a.id === id)\n        if (idx !== -1) nextOptions.splice(idx, 1)\n        options.value = nextOptions\n        activeOptionIndex.value = (() => {\n          if (idx === activeOptionIndex.value) return null\n          if (currentActiveOption === null) return null\n\n          // If we removed the option before the actual active index, then it would be out of sync. To\n          // fix this, we will find the correct (new) index position.\n          return nextOptions.indexOf(currentActiveOption)\n        })()\n      },\n      select(value: unknown) {\n        if (disabled) return\n        emit('update:modelValue', value)\n      },\n    }\n\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n      let active = document.activeElement\n\n      if (listboxState.value !== ListboxStates.Open) return\n      if (dom(buttonRef)?.contains(target)) return\n\n      if (!dom(optionsRef)?.contains(target)) api.closeListbox()\n      if (active !== document.body && active?.contains(target)) return // Keep focus on newly clicked/focused element\n      if (!event.defaultPrevented) dom(buttonRef)?.focus({ preventScroll: true })\n    })\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(ListboxContext, api)\n\n    return () => {\n      let slot = { open: listboxState.value === ListboxStates.Open, disabled }\n      return render({ props: passThroughProps, slot, slots, attrs, name: 'Listbox' })\n    }\n  },\n})\n\n// ---\n\nexport let ListboxLabel = defineComponent({\n  name: 'ListboxLabel',\n  props: { as: { type: [Object, String], default: 'label' } },\n  render() {\n    let api = useListboxContext('ListboxLabel')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open, disabled: api.disabled }\n    let propsWeControl = { id: this.id, ref: 'el', onClick: this.handleClick }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'ListboxLabel',\n    })\n  },\n  setup() {\n    let api = useListboxContext('ListboxLabel')\n    let id = `headlessui-listbox-label-${useId()}`\n\n    return {\n      id,\n      el: api.labelRef,\n      handleClick() {\n        dom(api.buttonRef)?.focus({ preventScroll: true })\n      },\n    }\n  },\n})\n\n// ---\n\nexport let ListboxButton = defineComponent({\n  name: 'ListboxButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n  },\n  render() {\n    let api = useListboxContext('ListboxButton')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open, disabled: api.disabled }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      type: 'button',\n      'aria-haspopup': true,\n      'aria-controls': dom(api.optionsRef)?.id,\n      'aria-expanded': api.listboxState.value === ListboxStates.Open ? true : undefined,\n      'aria-labelledby': api.labelRef.value\n        ? [dom(api.labelRef)?.id, this.id].join(' ')\n        : undefined,\n      disabled: api.disabled,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'ListboxButton',\n    })\n  },\n  setup() {\n    let api = useListboxContext('ListboxButton')\n    let id = `headlessui-listbox-button-${useId()}`\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (api.disabled) return\n      if (api.listboxState.value === ListboxStates.Open) {\n        api.closeListbox()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        api.openListbox()\n        nextFrame(() => dom(api.optionsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    return { id, el: api.buttonRef, handleKeyDown, handleKeyUp, handleClick }\n  },\n})\n\n// ---\n\nexport let ListboxOptions = defineComponent({\n  name: 'ListboxOptions',\n  props: {\n    as: { type: [Object, String], default: 'ul' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useListboxContext('ListboxOptions')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open }\n    let propsWeControl = {\n      'aria-activedescendant':\n        api.activeOptionIndex.value === null\n          ? undefined\n          : api.options.value[api.activeOptionIndex.value]?.id,\n      'aria-labelledby': dom(api.labelRef)?.id ?? dom(api.buttonRef)?.id,\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n      role: 'listbox',\n      tabIndex: 0,\n      ref: 'el',\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: slot.open,\n      name: 'ListboxOptions',\n    })\n  },\n  setup() {\n    let api = useListboxContext('ListboxOptions')\n    let id = `headlessui-listbox-options-${useId()}`\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeOptionIndex.value !== null) {\n            let { dataRef } = api.options.value[api.activeOptionIndex.value]\n            api.select(dataRef.value)\n          }\n          api.closeListbox()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Next)\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeListbox()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    return { id, el: api.optionsRef, handleKeyDown }\n  },\n})\n\nexport let ListboxOption = defineComponent({\n  name: 'ListboxOption',\n  props: {\n    as: { type: [Object, String], default: 'li' },\n    value: { type: [Object, String], default: null },\n    disabled: { type: Boolean, default: false },\n    class: { type: [String, Function], required: false },\n    className: { type: [String, Function], required: false },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useListboxContext('ListboxOption')\n    let id = `headlessui-listbox-option-${useId()}`\n    let { disabled, class: defaultClass, className = defaultClass, value } = props\n\n    let active = computed(() => {\n      return api.activeOptionIndex.value !== null\n        ? api.options.value[api.activeOptionIndex.value].id === id\n        : false\n    })\n\n    let selected = computed(() => toRaw(api.value.value) === toRaw(value))\n\n    let dataRef = ref<ListboxOptionDataRef['value']>({ disabled, value, textValue: '' })\n    onMounted(() => {\n      let textValue = document\n        .getElementById(id)\n        ?.textContent?.toLowerCase()\n        .trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerOption(id, dataRef))\n    onUnmounted(() => api.unregisterOption(id))\n\n    onMounted(() => {\n      watch(\n        [api.listboxState, selected],\n        () => {\n          if (api.listboxState.value !== ListboxStates.Open) return\n          if (!selected.value) return\n          api.goToOption(Focus.Specific, id)\n          document.getElementById(id)?.focus?.()\n        },\n        { immediate: true }\n      )\n    })\n\n    watchEffect(() => {\n      if (api.listboxState.value !== ListboxStates.Open) return\n      if (!active.value) return\n      nextTick(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (disabled) return event.preventDefault()\n      api.select(value)\n      api.closeListbox()\n      nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n    }\n\n    function handleFocus() {\n      if (disabled) return api.goToOption(Focus.Nothing)\n      api.goToOption(Focus.Specific, id)\n    }\n\n    function handleMove() {\n      if (disabled) return\n      if (active.value) return\n      api.goToOption(Focus.Specific, id)\n    }\n\n    function handleLeave() {\n      if (disabled) return\n      if (!active.value) return\n      api.goToOption(Focus.Nothing)\n    }\n\n    return () => {\n      let slot = { active: active.value, selected: selected.value, disabled }\n      let propsWeControl = {\n        id,\n        role: 'option',\n        tabIndex: -1,\n        class: resolvePropValue(className, slot),\n        'aria-disabled': disabled === true ? true : undefined,\n        'aria-selected': selected.value === true ? selected.value : undefined,\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        props: { ...props, ...propsWeControl },\n        slot,\n        attrs,\n        slots,\n        name: 'ListboxOption',\n      })\n    }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  onMounted,\n  onUnmounted,\n  ref,\n\n  // Types\n  PropType,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\n\nexport let FocusTrap = defineComponent({\n  name: 'FocusTrap',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  render() {\n    let slot = {}\n    let propsWeControl = { ref: 'el' }\n    let { initialFocus, ...passThroughProps } = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'FocusTrap',\n    })\n  },\n  setup(props) {\n    let containers = ref(new Set<HTMLElement>())\n    let container = ref<HTMLElement | null>(null)\n    let enabled = ref(true)\n    let focusTrapOptions = computed(() => ({ initialFocus: props.initialFocus }))\n\n    onMounted(() => {\n      if (!container.value) return\n      containers.value.add(container.value)\n\n      useFocusTrap(containers, enabled, focusTrapOptions)\n    })\n\n    onUnmounted(() => {\n      enabled.value = false\n    })\n\n    return { el: container }\n  },\n})\n","export function resolvePropValue<TProperty, TBag>(property: TProperty, bag: TBag) {\n  if (property === undefined) return undefined\n  if (typeof property === 'function') return property(bag)\n  return property\n}\n","import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  nextTick,\n  InjectionKey,\n  Ref,\n  watchEffect,\n} from 'vue'\nimport { Features, render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { resolvePropValue } from '../../utils/resolve-prop-value'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\nenum MenuStates {\n  Open,\n  Closed,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype MenuItemDataRef = Ref<{ textValue: string; disabled: boolean }>\ntype StateDefinition = {\n  // State\n  menuState: Ref<MenuStates>\n  buttonRef: Ref<HTMLButtonElement | null>\n  itemsRef: Ref<HTMLDivElement | null>\n  items: Ref<{ id: string; dataRef: MenuItemDataRef }[]>\n  searchQuery: Ref<string>\n  activeItemIndex: Ref<number | null>\n\n  // State mutators\n  closeMenu(): void\n  openMenu(): void\n  goToItem(focus: Focus, id?: string): void\n  search(value: string): void\n  clearSearch(): void\n  registerItem(id: string, dataRef: MenuItemDataRef): void\n  unregisterItem(id: string): void\n}\n\nlet MenuContext = Symbol('MenuContext') as InjectionKey<StateDefinition>\n\nfunction useMenuContext(component: string) {\n  let context = inject(MenuContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Menu /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useMenuContext)\n    throw err\n  }\n\n  return context\n}\n\nexport let Menu = defineComponent({\n  name: 'Menu',\n  props: { as: { type: [Object, String], default: 'template' } },\n  setup(props, { slots, attrs }) {\n    let menuState = ref<StateDefinition['menuState']['value']>(MenuStates.Closed)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let itemsRef = ref<StateDefinition['itemsRef']['value']>(null)\n    let items = ref<StateDefinition['items']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeItemIndex = ref<StateDefinition['activeItemIndex']['value']>(null)\n\n    let api = {\n      menuState,\n      buttonRef,\n      itemsRef,\n      items,\n      searchQuery,\n      activeItemIndex,\n      closeMenu: () => {\n        menuState.value = MenuStates.Closed\n        activeItemIndex.value = null\n      },\n      openMenu: () => (menuState.value = MenuStates.Open),\n      goToItem(focus: Focus, id?: string) {\n        let nextActiveItemIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => items.value,\n            resolveActiveIndex: () => activeItemIndex.value,\n            resolveId: item => item.id,\n            resolveDisabled: item => item.dataRef.disabled,\n          }\n        )\n\n        if (searchQuery.value === '' && activeItemIndex.value === nextActiveItemIndex) return\n        searchQuery.value = ''\n        activeItemIndex.value = nextActiveItemIndex\n      },\n      search(value: string) {\n        searchQuery.value += value\n\n        let match = items.value.findIndex(\n          item => item.dataRef.textValue.startsWith(searchQuery.value) && !item.dataRef.disabled\n        )\n\n        if (match === -1 || match === activeItemIndex.value) return\n\n        activeItemIndex.value = match\n      },\n      clearSearch() {\n        searchQuery.value = ''\n      },\n      registerItem(id: string, dataRef: MenuItemDataRef) {\n        // @ts-expect-error The expected type comes from property 'dataRef' which is declared here on type '{ id: string; dataRef: { textValue: string; disabled: boolean; }; }'\n        items.value.push({ id, dataRef })\n      },\n      unregisterItem(id: string) {\n        let nextItems = items.value.slice()\n        let currentActiveItem =\n          activeItemIndex.value !== null ? nextItems[activeItemIndex.value] : null\n        let idx = nextItems.findIndex(a => a.id === id)\n        if (idx !== -1) nextItems.splice(idx, 1)\n        items.value = nextItems\n        activeItemIndex.value = (() => {\n          if (idx === activeItemIndex.value) return null\n          if (currentActiveItem === null) return null\n\n          // If we removed the item before the actual active index, then it would be out of sync. To\n          // fix this, we will find the correct (new) index position.\n          return nextItems.indexOf(currentActiveItem)\n        })()\n      },\n    }\n\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n      let active = document.activeElement\n\n      if (menuState.value !== MenuStates.Open) return\n      if (dom(buttonRef)?.contains(target)) return\n\n      if (!dom(itemsRef)?.contains(target)) api.closeMenu()\n      if (active !== document.body && active?.contains(target)) return // Keep focus on newly clicked/focused element\n      if (!event.defaultPrevented) dom(buttonRef)?.focus({ preventScroll: true })\n    })\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(MenuContext, api)\n\n    return () => {\n      let slot = { open: menuState.value === MenuStates.Open }\n      return render({ props, slot, slots, attrs, name: 'Menu' })\n    }\n  },\n})\n\nexport let MenuButton = defineComponent({\n  name: 'MenuButton',\n  props: {\n    disabled: { type: Boolean, default: false },\n    as: { type: [Object, String], default: 'button' },\n  },\n  render() {\n    let api = useMenuContext('MenuButton')\n\n    let slot = { open: api.menuState.value === MenuStates.Open }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      type: 'button',\n      'aria-haspopup': true,\n      'aria-controls': dom(api.itemsRef)?.id,\n      'aria-expanded': api.menuState.value === MenuStates.Open ? true : undefined,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'MenuButton',\n    })\n  },\n  setup(props) {\n    let api = useMenuContext('MenuButton')\n    let id = `headlessui-menu-button-${useId()}`\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return\n      if (api.menuState.value === MenuStates.Open) {\n        api.closeMenu()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        event.stopPropagation()\n        api.openMenu()\n        nextFrame(() => dom(api.itemsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    return { id, el: api.buttonRef, handleKeyDown, handleKeyUp, handleClick }\n  },\n})\n\nexport let MenuItems = defineComponent({\n  name: 'MenuItems',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useMenuContext('MenuItems')\n\n    let slot = { open: api.menuState.value === MenuStates.Open }\n    let propsWeControl = {\n      'aria-activedescendant':\n        api.activeItemIndex.value === null\n          ? undefined\n          : api.items.value[api.activeItemIndex.value]?.id,\n      'aria-labelledby': dom(api.buttonRef)?.id,\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      role: 'menu',\n      tabIndex: 0,\n      ref: 'el',\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: slot.open,\n      name: 'MenuItems',\n    })\n  },\n  setup() {\n    let api = useMenuContext('MenuItems')\n    let id = `headlessui-menu-items-${useId()}`\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    useTreeWalker({\n      container: computed(() => dom(api.itemsRef)),\n      enabled: computed(() => api.menuState.value === MenuStates.Open),\n      accept(node) {\n        if (node.getAttribute('role') === 'menuitem') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeItemIndex.value !== null) {\n            let { id } = api.items.value[api.activeItemIndex.value]\n            document.getElementById(id)?.click()\n          }\n          api.closeMenu()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Next)\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeMenu()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    return { id, el: api.itemsRef, handleKeyDown, handleKeyUp }\n  },\n})\n\nexport let MenuItem = defineComponent({\n  name: 'MenuItem',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: Boolean, default: false },\n    class: { type: [String, Function], required: false },\n    className: { type: [String, Function], required: false },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useMenuContext('MenuItem')\n    let id = `headlessui-menu-item-${useId()}`\n    let { disabled, class: defaultClass, className = defaultClass } = props\n\n    let active = computed(() => {\n      return api.activeItemIndex.value !== null\n        ? api.items.value[api.activeItemIndex.value].id === id\n        : false\n    })\n\n    let dataRef = ref<MenuItemDataRef['value']>({ disabled, textValue: '' })\n    onMounted(() => {\n      let textValue = document\n        .getElementById(id)\n        ?.textContent?.toLowerCase()\n        .trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerItem(id, dataRef))\n    onUnmounted(() => api.unregisterItem(id))\n\n    watchEffect(() => {\n      if (api.menuState.value !== MenuStates.Open) return\n      if (!active.value) return\n      nextTick(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (disabled) return event.preventDefault()\n      api.closeMenu()\n      nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n    }\n\n    function handleFocus() {\n      if (disabled) return api.goToItem(Focus.Nothing)\n      api.goToItem(Focus.Specific, id)\n    }\n\n    function handleMove() {\n      if (disabled) return\n      if (active.value) return\n      api.goToItem(Focus.Specific, id)\n    }\n\n    function handleLeave() {\n      if (disabled) return\n      if (!active.value) return\n      api.goToItem(Focus.Nothing)\n    }\n\n    return () => {\n      let slot = { active: active.value, disabled }\n      let propsWeControl = {\n        id,\n        role: 'menuitem',\n        tabIndex: -1,\n        class: resolvePropValue(className, slot),\n        'aria-disabled': disabled === true ? true : undefined,\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        props: { ...props, ...propsWeControl },\n        slot,\n        attrs,\n        slots,\n        name: 'MenuItem',\n      })\n    }\n  },\n})\n","import { watchEffect, ComputedRef } from 'vue'\n\ntype AcceptNode = (\n  node: HTMLElement\n) =>\n  | typeof NodeFilter.FILTER_ACCEPT\n  | typeof NodeFilter.FILTER_SKIP\n  | typeof NodeFilter.FILTER_REJECT\n\nexport function useTreeWalker({\n  container,\n  accept,\n  walk,\n  enabled,\n}: {\n  container: ComputedRef<HTMLElement | null>\n  accept: AcceptNode\n  walk(node: HTMLElement): void\n  enabled?: ComputedRef<boolean>\n}) {\n  watchEffect(() => {\n    let root = container.value\n    if (!root) return\n    if (enabled !== undefined && !enabled.value) return\n\n    let acceptNode = Object.assign((node: HTMLElement) => accept(node), { acceptNode: accept })\n    let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, acceptNode, false)\n\n    while (walker.nextNode()) walk(walker.currentNode as HTMLElement)\n  })\n}\n","import {\n  defineComponent,\n  inject,\n  onUnmounted,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport {\n  getFocusableElements,\n  Focus,\n  focusIn,\n  FocusResult,\n  isFocusableElement,\n  FocusableMode,\n} from '../../utils/focus-management'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\n\nenum PopoverStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  popoverState: Ref<PopoverStates>\n  button: Ref<HTMLElement | null>\n  buttonId: string\n  panel: Ref<HTMLElement | null>\n  panelId: string\n\n  // State mutators\n  togglePopover(): void\n  closePopover(): void\n}\n\nlet PopoverContext = Symbol('PopoverContext') as InjectionKey<StateDefinition>\nfunction usePopoverContext(component: string) {\n  let context = inject(PopoverContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverContext)\n    throw err\n  }\n  return context\n}\n\nlet PopoverGroupContext = Symbol('PopoverGroupContext') as InjectionKey<{\n  registerPopover(registerbag: PopoverRegisterBag): void\n  unregisterPopover(registerbag: PopoverRegisterBag): void\n  isFocusWithinPopoverGroup(): boolean\n  closeOthers(buttonId: string): void\n} | null>\n\nfunction usePopoverGroupContext() {\n  return inject(PopoverGroupContext, null)\n}\n\nlet PopoverPanelContext = Symbol('PopoverPanelContext') as InjectionKey<string | null>\nfunction usePopoverPanelContext() {\n  return inject(PopoverPanelContext, null)\n}\n\ninterface PopoverRegisterBag {\n  buttonId: string\n  panelId: string\n  close(): void\n}\n\n// ---\n\nexport let Popover = defineComponent({\n  name: 'Popover',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let { ...passThroughProps } = props\n\n    let buttonId = `headlessui-popover-button-${useId()}`\n    let panelId = `headlessui-popover-panel-${useId()}`\n\n    let popoverState = ref<StateDefinition['popoverState']['value']>(PopoverStates.Closed)\n    let button = ref<StateDefinition['button']['value']>(null)\n    let panel = ref<StateDefinition['panel']['value']>(null)\n\n    let api = {\n      popoverState,\n      buttonId,\n      panelId,\n      panel,\n      button,\n      togglePopover() {\n        popoverState.value = match(popoverState.value, {\n          [PopoverStates.Open]: PopoverStates.Closed,\n          [PopoverStates.Closed]: PopoverStates.Open,\n        })\n      },\n      closePopover() {\n        if (popoverState.value === PopoverStates.Closed) return\n        popoverState.value = PopoverStates.Closed\n      },\n    } as StateDefinition\n\n    provide(PopoverContext, api)\n\n    let registerBag = {\n      buttonId,\n      panelId,\n      close() {\n        api.closePopover()\n      },\n    }\n\n    let groupContext = usePopoverGroupContext()\n    let registerPopover = groupContext?.registerPopover\n\n    function isFocusWithinPopoverGroup() {\n      return (\n        groupContext?.isFocusWithinPopoverGroup() ??\n        (dom(button)?.contains(document.activeElement) ||\n          dom(panel)?.contains(document.activeElement))\n      )\n    }\n\n    watchEffect(() => registerPopover?.(registerBag))\n\n    // Handle focus out\n    useWindowEvent(\n      'focus',\n      () => {\n        if (popoverState.value !== PopoverStates.Open) return\n        if (isFocusWithinPopoverGroup()) return\n        if (!button) return\n        if (!panel) return\n\n        api.closePopover()\n      },\n      true\n    )\n\n    // Handle outside click\n    useWindowEvent('mousedown', (event: MouseEvent) => {\n      let target = event.target as HTMLElement\n\n      if (popoverState.value !== PopoverStates.Open) return\n\n      if (dom(button)?.contains(target)) return\n      if (dom(panel)?.contains(target)) return\n\n      api.closePopover()\n\n      if (!isFocusableElement(target, FocusableMode.Loose)) {\n        event.preventDefault()\n        dom(button)?.focus()\n      }\n    })\n\n    return () => {\n      let slot = { open: popoverState.value === PopoverStates.Open }\n      return render({ props: passThroughProps, slot, slots, attrs, name: 'Popover' })\n    }\n  },\n})\n\n// ---\n\nexport let PopoverButton = defineComponent({\n  name: 'PopoverButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  render() {\n    let api = usePopoverContext('PopoverButton')\n\n    let slot = { open: api.popoverState.value === PopoverStates.Open }\n    let propsWeControl = this.isWithinPanel\n      ? {\n          type: 'button',\n          onKeydown: this.handleKeyDown,\n          onClick: this.handleClick,\n        }\n      : {\n          ref: 'el',\n          id: api.buttonId,\n          type: 'button',\n          'aria-expanded': api.popoverState.value === PopoverStates.Open ? true : undefined,\n          'aria-controls': dom(api.panel) ? api.panelId : undefined,\n          onKeydown: this.handleKeyDown,\n          onKeyup: this.handleKeyUp,\n          onClick: this.handleClick,\n        }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'PopoverButton',\n    })\n  },\n  setup(props) {\n    let api = usePopoverContext('PopoverButton')\n\n    let groupContext = usePopoverGroupContext()\n    let closeOthers = groupContext?.closeOthers\n\n    let panelContext = usePopoverPanelContext()\n    let isWithinPanel = panelContext === null ? false : panelContext === api.panelId\n\n    // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n    let activeElementRef = ref<Element | null>(null)\n    let previousActiveElementRef = ref<Element | null>(\n      typeof window === 'undefined' ? null : document.activeElement\n    )\n\n    useWindowEvent(\n      'focus',\n      () => {\n        previousActiveElementRef.value = activeElementRef.value\n        activeElementRef.value = document.activeElement\n      },\n      true\n    )\n\n    return {\n      isWithinPanel,\n      el: isWithinPanel ? null : api.button,\n      handleKeyDown(event: KeyboardEvent) {\n        if (isWithinPanel) {\n          if (api.popoverState.value === PopoverStates.Closed) return\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault() // Prevent triggering a *click* event\n              event.stopPropagation()\n              api.closePopover()\n              dom(api.button)?.focus() // Re-focus the original opening Button\n              break\n          }\n        } else {\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault() // Prevent triggering a *click* event\n              event.stopPropagation()\n              if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId)\n              api.togglePopover()\n              break\n\n            case Keys.Escape:\n              if (api.popoverState.value !== PopoverStates.Open) return closeOthers?.(api.buttonId)\n              if (!dom(api.button)) return\n              if (!dom(api.button)?.contains(document.activeElement)) return\n              api.closePopover()\n              break\n\n            case Keys.Tab:\n              if (api.popoverState.value !== PopoverStates.Open) return\n              if (!api.panel) return\n              if (!api.button) return\n\n              // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n              if (event.shiftKey) {\n                // Check if the last focused element exists, and check that it is not inside button or panel itself\n                if (!previousActiveElementRef.value) return\n                if (dom(api.button)?.contains(previousActiveElementRef.value)) return\n                if (dom(api.panel)?.contains(previousActiveElementRef.value)) return\n\n                // Check if the last focused element is *after* the button in the DOM\n                let focusableElements = getFocusableElements()\n                let previousIdx = focusableElements.indexOf(\n                  previousActiveElementRef.value as HTMLElement\n                )\n                let buttonIdx = focusableElements.indexOf(dom(api.button)!)\n                if (buttonIdx > previousIdx) return\n\n                event.preventDefault()\n                event.stopPropagation()\n\n                focusIn(dom(api.panel)!, Focus.Last)\n              } else {\n                event.preventDefault()\n                event.stopPropagation()\n\n                focusIn(dom(api.panel)!, Focus.First)\n              }\n\n              break\n          }\n        }\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        if (isWithinPanel) return\n        if (event.key === Keys.Space) {\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n        }\n        if (api.popoverState.value !== PopoverStates.Open) return\n        if (!api.panel) return\n        if (!api.button) return\n\n        // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n        switch (event.key) {\n          case Keys.Tab:\n            // Check if the last focused element exists, and check that it is not inside button or panel itself\n            if (!previousActiveElementRef.value) return\n            if (dom(api.button)?.contains(previousActiveElementRef.value)) return\n            if (dom(api.panel)?.contains(previousActiveElementRef.value)) return\n\n            // Check if the last focused element is *after* the button in the DOM\n            let focusableElements = getFocusableElements()\n            let previousIdx = focusableElements.indexOf(\n              previousActiveElementRef.value as HTMLElement\n            )\n            let buttonIdx = focusableElements.indexOf(dom(api.button)!)\n            if (buttonIdx > previousIdx) return\n\n            event.preventDefault()\n            event.stopPropagation()\n            focusIn(dom(api.panel)!, Focus.Last)\n            break\n        }\n      },\n      handleClick() {\n        if (props.disabled) return\n        if (isWithinPanel) {\n          api.closePopover()\n          dom(api.button)?.focus() // Re-focus the original opening Button\n        } else {\n          if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId)\n          dom(api.button)?.focus()\n          api.togglePopover()\n        }\n      },\n      handleFocus() {},\n    }\n  },\n})\n\n// ---\n\nexport let PopoverOverlay = defineComponent({\n  name: 'PopoverOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = usePopoverContext('PopoverOverlay')\n\n    let slot = { open: api.popoverState.value === PopoverStates.Open }\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      'aria-hidden': true,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: slot.open,\n      name: 'PopoverOverlay',\n    })\n  },\n  setup() {\n    let api = usePopoverContext('PopoverOverlay')\n\n    return {\n      id: `headlessui-popover-overlay-${useId()}`,\n      handleClick() {\n        api.closePopover()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let PopoverPanel = defineComponent({\n  name: 'PopoverPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    focus: { type: Boolean, default: false },\n  },\n  render() {\n    let api = usePopoverContext('PopoverPanel')\n\n    let slot = { open: api.popoverState.value === PopoverStates.Open }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: slot.open,\n      name: 'PopoverPanel',\n    })\n  },\n  setup(props) {\n    let { focus } = props\n    let api = usePopoverContext('PopoverPanel')\n\n    provide(PopoverPanelContext, api.panelId)\n\n    onUnmounted(() => {\n      api.panel.value = null\n    })\n\n    // Move focus within panel\n    watchEffect(() => {\n      if (!focus) return\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!api.panel) return\n\n      let activeElement = document.activeElement as HTMLElement\n      if (dom(api.panel)?.contains(activeElement)) return // Already focused within Dialog\n\n      focusIn(dom(api.panel)!, Focus.First)\n    })\n\n    // Handle Tab / Shift+Tab focus positioning\n    useWindowEvent('keydown', (event: KeyboardEvent) => {\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!dom(api.panel)) return\n\n      if (event.key !== Keys.Tab) return\n      if (!document.activeElement) return\n      if (!dom(api.panel)?.contains(document.activeElement)) return\n\n      // We will take-over the default tab behaviour so that we have a bit\n      // control over what is focused next. It will behave exactly the same,\n      // but it will also \"fix\" some issues based on wether you are using a\n      // Portal or not.\n      event.preventDefault()\n\n      let result = focusIn(dom(api.panel)!, event.shiftKey ? Focus.Previous : Focus.Next)\n\n      if (result === FocusResult.Underflow) {\n        return dom(api.button)?.focus()\n      } else if (result === FocusResult.Overflow) {\n        if (!dom(api.button)) return\n\n        let elements = getFocusableElements()\n        let buttonIdx = elements.indexOf(dom(api.button)!)\n\n        let nextElements = elements\n          .splice(buttonIdx + 1) // Elements after button\n          .filter(element => !dom(api.panel)?.contains(element)) // Ignore items in panel\n\n        // Try to focus the next element, however it could fail if we are in a\n        // Portal that happens to be the very last one in the DOM. In that\n        // case we would Error (because nothing after the button is\n        // focusable). Therefore we will try and focus the very first item in\n        // the document.body.\n        if (focusIn(nextElements, Focus.First) === FocusResult.Error) {\n          focusIn(document.body, Focus.First)\n        }\n      }\n    })\n\n    // Handle focus out when we are in special \"focus\" mode\n    useWindowEvent(\n      'focus',\n      () => {\n        if (!focus) return\n        if (api.popoverState.value !== PopoverStates.Open) return\n        if (!dom(api.panel)) return\n        if (dom(api.panel)?.contains(document.activeElement as HTMLElement)) return\n        api.closePopover()\n      },\n      true\n    )\n\n    return {\n      id: api.panelId,\n      el: api.panel,\n      handleKeyDown(event: KeyboardEvent) {\n        switch (event.key) {\n          case Keys.Escape:\n            if (api.popoverState.value !== PopoverStates.Open) return\n            if (!dom(api.panel)) return\n            if (!dom(api.panel)?.contains(document.activeElement)) return\n            event.preventDefault()\n            api.closePopover()\n            dom(api.button)?.focus()\n            break\n        }\n      },\n    }\n  },\n})\n\n// ---\n\nexport let PopoverGroup = defineComponent({\n  name: 'PopoverGroup',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  render() {\n    let propsWeControl = { ref: 'el' }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot: {},\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'PopoverGroup',\n    })\n  },\n  setup() {\n    let groupRef = ref<HTMLElement | null>(null)\n    let popovers = ref<PopoverRegisterBag[]>([])\n\n    function unregisterPopover(registerBag: PopoverRegisterBag) {\n      let idx = popovers.value.indexOf(registerBag)\n      if (idx !== -1) popovers.value.splice(idx, 1)\n    }\n\n    function registerPopover(registerBag: PopoverRegisterBag) {\n      popovers.value.push(registerBag)\n      return () => {\n        unregisterPopover(registerBag)\n      }\n    }\n\n    function isFocusWithinPopoverGroup() {\n      let element = document.activeElement as HTMLElement\n\n      if (dom(groupRef)?.contains(element)) return true\n\n      // Check if the focus is in one of the button or panel elements. This is important in case you are rendering inside a Portal.\n      return popovers.value.some(bag => {\n        return (\n          document.getElementById(bag.buttonId)?.contains(element) ||\n          document.getElementById(bag.panelId)?.contains(element)\n        )\n      })\n    }\n\n    function closeOthers(buttonId: string) {\n      for (let popover of popovers.value) {\n        if (popover.buttonId !== buttonId) popover.close()\n      }\n    }\n\n    provide(PopoverGroupContext, {\n      registerPopover,\n      unregisterPopover,\n      isFocusWithinPopoverGroup,\n      closeOthers,\n    })\n\n    return { el: groupRef }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet LabelContext = Symbol('LabelContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Record<string, unknown>\n  name: string\n  props: Record<string, unknown>\n}>\n\nfunction useLabelContext() {\n  let context = inject(LabelContext, null)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\nexport function useLabels({\n  slot = {},\n  name = 'Label',\n  props = {},\n}: {\n  slot?: Record<string, unknown>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let labelIds = ref<string[]>([])\n  function register(value: string) {\n    labelIds.value.push(value)\n\n    return () => {\n      let idx = labelIds.value.indexOf(value)\n      if (idx === -1) return\n      labelIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(LabelContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() => (labelIds.value.length > 0 ? labelIds.value.join(' ') : undefined))\n}\n\n// ---\n\nexport let Label = defineComponent({\n  name: 'Label',\n  props: {\n    as: { type: [Object, String], default: 'label' },\n    passive: { type: [Boolean], default: false },\n  },\n  render() {\n    let { name = 'Label', slot = {}, props = {} } = this.context\n    let { passive, ...passThroughProps } = this.$props\n    let propsWeControl = {\n      ...Object.entries(props).reduce(\n        (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n        {}\n      ),\n      id: this.id,\n    }\n    let allProps = { ...passThroughProps, ...propsWeControl }\n\n    // @ts-expect-error props are dynamic via context, some components will\n    //                  provide an onClick then we can delete it.\n    if (passive) delete allProps['onClick']\n\n    return render({\n      props: allProps,\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name,\n    })\n  },\n  setup() {\n    let context = useLabelContext()\n    let id = `headlessui-label-${useId()}`\n\n    onMounted(() => onUnmounted(context.register(id)))\n\n    return { id, context }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  toRaw,\n\n  // Types\n  InjectionKey,\n  Ref,\n  UnwrapRef,\n} from 'vue'\nimport { dom } from '../../utils/dom'\nimport { Keys } from '../../keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { resolvePropValue } from '../../utils/resolve-prop-value'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: Ref<HTMLElement | null>\n  propsRef: Ref<{ value: unknown }>\n}\n\ninterface StateDefinition {\n  // State\n  options: Ref<Option[]>\n  value: Ref<unknown>\n\n  // State mutators\n  change(nextValue: unknown): void\n  registerOption(action: Option): void\n  unregisterOption(id: Option['id']): void\n}\n\nlet RadioGroupContext = Symbol('RadioGroupContext') as InjectionKey<StateDefinition>\n\nfunction useRadioGroupContext(component: string) {\n  let context = inject(RadioGroupContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <RadioGroup /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let RadioGroup = defineComponent({\n  name: 'RadioGroup',\n  emits: ['update:modelValue'],\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    disabled: { type: [Boolean], default: false },\n    modelValue: { type: [Object, String, Number, Boolean] },\n  },\n  render() {\n    let { modelValue, disabled, ...passThroughProps } = this.$props\n\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      role: 'radiogroup',\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      onKeydown: this.handleKeyDown,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: {},\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'RadioGroup',\n    })\n  },\n  setup(props, { emit }) {\n    let radioGroupRef = ref<HTMLElement | null>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    let value = computed(() => props.modelValue)\n\n    let api = {\n      options,\n      value,\n      change(nextValue: unknown) {\n        if (props.disabled) return\n        if (value.value === nextValue) return\n        emit('update:modelValue', nextValue)\n      },\n      registerOption(action: UnwrapRef<Option>) {\n        let orderMap = Array.from(\n          radioGroupRef.value?.querySelectorAll('[id^=\"headlessui-radiogroup-option-\"]')!\n        ).reduce(\n          (lookup, element, index) => Object.assign(lookup, { [element.id]: index }),\n          {}\n        ) as Record<string, number>\n\n        options.value.push(action)\n        options.value.sort((a, z) => orderMap[a.id] - orderMap[z.id])\n      },\n      unregisterOption(id: Option['id']) {\n        let idx = options.value.findIndex(radio => radio.id === id)\n        if (idx === -1) return\n        options.value.splice(idx, 1)\n      },\n    }\n\n    // @ts-expect-error ...\n    provide(RadioGroupContext, api)\n\n    useTreeWalker({\n      container: computed(() => dom(radioGroupRef)),\n      accept(node) {\n        if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (!radioGroupRef.value) return\n      if (!radioGroupRef.value.contains(event.target as HTMLElement)) return\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(\n              options.value.map(radio => radio.element) as HTMLElement[],\n              Focus.Previous | Focus.WrapAround\n            )\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                option => option.element === document.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(\n              options.value.map(option => option.element) as HTMLElement[],\n              Focus.Next | Focus.WrapAround\n            )\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                option => option.element === document.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.value.find(\n              option => option.element === document.activeElement\n            )\n            if (activeOption) api.change(activeOption.propsRef.value)\n          }\n          break\n      }\n    }\n\n    let id = `headlessui-radiogroup-${useId()}`\n\n    return {\n      id,\n      labelledby,\n      describedby,\n      el: radioGroupRef,\n      handleKeyDown,\n    }\n  },\n})\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nexport let RadioGroupOption = defineComponent({\n  name: 'RadioGroupOption',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    value: { type: [Object, String] },\n    disabled: { type: Boolean, default: false },\n    class: { type: [String, Function], required: false },\n    className: { type: [String, Function], required: false },\n  },\n  render() {\n    let {\n      value,\n      disabled,\n      class: defaultClass,\n      className = defaultClass,\n      ...passThroughProps\n    } = this.$props\n    let api = useRadioGroupContext('RadioGroupOption')\n\n    let firstRadio = api.options.value?.[0]?.id === this.id\n\n    let slot = { checked: this.checked, active: Boolean(this.state & OptionState.Active) }\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      role: 'radio',\n      class: resolvePropValue(className, slot),\n      'aria-checked': this.checked ? 'true' : 'false',\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      tabIndex: this.checked ? 0 : api.value.value === undefined && firstRadio ? 0 : -1,\n      onClick: this.handleClick,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'RadioGroupOption',\n    })\n  },\n  setup(props) {\n    let api = useRadioGroupContext('RadioGroupOption')\n    let id = `headlessui-radiogroup-option-${useId()}`\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    let optionRef = ref<HTMLElement | null>(null)\n    let propsRef = computed(() => ({ value: props.value }))\n    let state = ref(OptionState.Empty)\n\n    onMounted(() => api.registerOption({ id, element: optionRef, propsRef }))\n    onUnmounted(() => api.unregisterOption(id))\n\n    return {\n      id,\n      el: optionRef,\n      labelledby,\n      describedby,\n      state,\n      checked: computed(() => toRaw(api.value.value) === toRaw(props.value)),\n      handleClick() {\n        let value = props.value\n        if (api.value.value === value) return\n\n        state.value |= OptionState.Active\n\n        api.change(value)\n        optionRef.value?.focus()\n      },\n      handleFocus() {\n        state.value |= OptionState.Active\n      },\n      handleBlur() {\n        state.value &= ~OptionState.Active\n      },\n    }\n  },\n})\n\n// ---\n\nexport let RadioGroupLabel = Label\nexport let RadioGroupDescription = Description\n","import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falseys we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => done(Reason.Finished), durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n","import {\n  defineComponent,\n  inject,\n  provide,\n  ref,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { resolvePropValue } from '../../utils/resolve-prop-value'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\n\ntype StateDefinition = {\n  // State\n  switchRef: Ref<HTMLButtonElement | null>\n  labelledby: Ref<string | undefined>\n  describedby: Ref<string | undefined>\n}\n\nlet GroupContext = Symbol('GroupContext') as InjectionKey<StateDefinition>\n\n// ---\n\nexport let SwitchGroup = defineComponent({\n  name: 'SwitchGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n  },\n  setup(props, { slots, attrs }) {\n    let switchRef = ref<StateDefinition['switchRef']['value']>(null)\n    let labelledby = useLabels({\n      name: 'SwitchLabel',\n      props: {\n        onClick() {\n          if (!switchRef.value) return\n          switchRef.value.click()\n          switchRef.value.focus({ preventScroll: true })\n        },\n      },\n    })\n    let describedby = useDescriptions({ name: 'SwitchDescription' })\n\n    let api = { switchRef, labelledby, describedby }\n\n    provide(GroupContext, api)\n\n    return () => render({ props, slot: {}, slots, attrs, name: 'SwitchGroup' })\n  },\n})\n\n// ---\n\nexport let Switch = defineComponent({\n  name: 'Switch',\n  emits: ['update:modelValue'],\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    modelValue: { type: [Object, Boolean], default: null },\n    class: { type: [String, Function], required: false },\n    className: { type: [String, Function], required: false },\n  },\n  render() {\n    let api = inject(GroupContext, null)\n    let { class: defaultClass, className = defaultClass } = this.$props\n\n    let slot = { checked: this.$props.modelValue }\n    let propsWeControl = {\n      id: this.id,\n      ref: api === null ? undefined : api.switchRef,\n      role: 'switch',\n      tabIndex: 0,\n      class: resolvePropValue(className, slot),\n      'aria-checked': this.$props.modelValue,\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      onClick: this.handleClick,\n      onKeyup: this.handleKeyUp,\n      onKeypress: this.handleKeyPress,\n    }\n\n    if (this.$props.as === 'button') {\n      Object.assign(propsWeControl, { type: 'button' })\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'Switch',\n    })\n  },\n  setup(props, { emit }) {\n    let api = inject(GroupContext, null)\n    let id = `headlessui-switch-${useId()}`\n\n    function toggle() {\n      emit('update:modelValue', !props.modelValue)\n    }\n\n    return {\n      id,\n      el: api?.switchRef,\n      labelledby: api?.labelledby,\n      describedby: api?.describedby,\n      handleClick(event: MouseEvent) {\n        event.preventDefault()\n        toggle()\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        if (event.key !== Keys.Tab) event.preventDefault()\n        if (event.key === Keys.Space) toggle()\n      },\n      // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n      handleKeyPress(event: KeyboardEvent) {\n        event.preventDefault()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let SwitchLabel = Label\nexport let SwitchDescription = Description\n","export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n","export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n","import {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  watch,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\n\nimport { Features, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\nimport { dom } from '../../utils/dom'\n\ntype ID = ReturnType<typeof useId>\n\nfunction splitClasses(classes: string = '') {\n  return classes.split(' ').filter(className => className.trim().length > 1)\n}\n\ninterface TransitionContextValues {\n  show: Ref<boolean>\n  appear: Ref<boolean>\n}\nlet TransitionContext = Symbol('TransitionContext') as InjectionKey<TransitionContextValues | null>\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nfunction useTransitionContext() {\n  let context = inject(TransitionContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = inject(NestingContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: Ref<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = Symbol('NestingContext') as InjectionKey<NestingContextValues | null>\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.value.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let transitionableChildren = ref<NestingContextValues['children']['value']>([])\n\n  let mounted = ref(false)\n  onMounted(() => (mounted.value = true))\n  onUnmounted(() => (mounted.value = false))\n\n  function unregister(childId: ID, strategy = RenderStrategy.Hidden) {\n    let idx = transitionableChildren.value.findIndex(({ id }) => id === childId)\n    if (idx === -1) return\n\n    match(strategy, {\n      [RenderStrategy.Unmount]() {\n        transitionableChildren.value.splice(idx, 1)\n      },\n      [RenderStrategy.Hidden]() {\n        transitionableChildren.value[idx].state = TreeStates.Hidden\n      },\n    })\n\n    if (!hasChildren(transitionableChildren) && mounted.value) {\n      done?.()\n    }\n  }\n\n  function register(childId: ID) {\n    let child = transitionableChildren.value.find(({ id }) => id === childId)\n    if (!child) {\n      transitionableChildren.value.push({ id: childId, state: TreeStates.Visible })\n    } else if (child.state !== TreeStates.Visible) {\n      child.state = TreeStates.Visible\n    }\n\n    return () => unregister(childId, RenderStrategy.Unmount)\n  }\n\n  return {\n    children: transitionableChildren,\n    register,\n    unregister,\n  }\n}\n\n// ---\n\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nexport let TransitionChild = defineComponent({\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'],\n  render() {\n    let {\n      appear,\n      show,\n\n      // Class names\n      enter,\n      enterFrom,\n      enterTo,\n      leave,\n      leaveFrom,\n      leaveTo,\n      ...rest\n    } = this.$props\n\n    let propsWeControl = { ref: 'el' }\n    let passthroughProps = rest\n\n    return render({\n      props: { ...passthroughProps, ...propsWeControl },\n      slot: {},\n      slots: this.$slots,\n      attrs: this.$attrs,\n      features: TransitionChildRenderFeatures,\n      visible: this.state === TreeStates.Visible,\n      name: 'TransitionChild',\n    })\n  },\n  setup(props, { emit }) {\n    let container = ref<HTMLElement | null>(null)\n    let state = ref(TreeStates.Visible)\n    let strategy = computed(() => (props.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden))\n\n    let { show, appear } = useTransitionContext()\n    let { register, unregister } = useParentNesting()\n\n    let initial = { value: true }\n\n    let id = useId()\n\n    let isTransitioning = { value: false }\n\n    let nesting = useNesting(() => {\n      // When all children have been unmounted we can only hide ourselves if and only if we are not\n      // transitioning ourserlves. Otherwise we would unmount before the transitions are finished.\n      if (!isTransitioning.value) {\n        state.value = TreeStates.Hidden\n        unregister(id)\n        emit('afterLeave')\n      }\n    })\n\n    onMounted(() => {\n      let unregister = register(id)\n      onUnmounted(unregister)\n    })\n\n    watchEffect(() => {\n      // If we are in another mode than the Hidden mode then ignore\n      if (strategy.value !== RenderStrategy.Hidden) return\n      if (!id) return\n\n      // Make sure that we are visible\n      if (show && state.value !== TreeStates.Visible) {\n        state.value = TreeStates.Visible\n        return\n      }\n\n      match(state.value, {\n        [TreeStates.Hidden]: () => unregister(id),\n        [TreeStates.Visible]: () => register(id),\n      })\n    })\n\n    let enterClasses = splitClasses(props.enter)\n    let enterFromClasses = splitClasses(props.enterFrom)\n    let enterToClasses = splitClasses(props.enterTo)\n\n    let leaveClasses = splitClasses(props.leave)\n    let leaveFromClasses = splitClasses(props.leaveFrom)\n    let leaveToClasses = splitClasses(props.leaveTo)\n\n    onMounted(() => {\n      watchEffect(() => {\n        if (state.value === TreeStates.Visible) {\n          let domElement = dom(container)\n          // When you return `null` from a component, the actual DOM reference will\n          // be an empty comment... This means that we can never check for the DOM\n          // node to be `null`. So instead we check for an empty comment.\n          let isEmptyDOMNode = domElement instanceof Comment && domElement.data === ''\n          if (isEmptyDOMNode) {\n            throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n          }\n        }\n      })\n    })\n\n    function executeTransition(onInvalidate: (cb: () => void) => void) {\n      // Skipping initial transition\n      let skip = initial.value && !appear.value\n\n      let node = dom(container)\n      if (!node || !(node instanceof HTMLElement)) return\n      if (skip) return\n\n      isTransitioning.value = true\n\n      if (show.value) emit('beforeEnter')\n      if (!show.value) emit('beforeLeave')\n\n      onInvalidate(\n        show.value\n          ? transition(node, enterClasses, enterFromClasses, enterToClasses, reason => {\n              isTransitioning.value = false\n              if (reason === Reason.Finished) emit('afterEnter')\n            })\n          : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, reason => {\n              isTransitioning.value = false\n\n              if (reason !== Reason.Finished) return\n\n              // When we don't have children anymore we can safely unregister from the parent and hide\n              // ourselves.\n              if (!hasChildren(nesting)) {\n                state.value = TreeStates.Hidden\n                unregister(id)\n                emit('afterLeave')\n              }\n            })\n      )\n    }\n\n    onMounted(() => {\n      watch(\n        [show, appear],\n        (_oldValues, _newValues, onInvalidate) => {\n          executeTransition(onInvalidate)\n          initial.value = false\n        },\n        { immediate: true }\n      )\n    })\n    // onUpdated(() => executeTransition(() => {}))\n\n    provide(NestingContext, nesting)\n\n    return { el: container, state }\n  },\n})\n\n// ---\n\nexport let TransitionRoot = defineComponent({\n  inheritAttrs: false,\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'],\n  render() {\n    let { show, appear, unmount, ...passThroughProps } = this.$props\n    let sharedProps = { unmount }\n\n    return render({\n      props: {\n        ...sharedProps,\n        as: 'template',\n      },\n      slot: {},\n      slots: {\n        ...this.$slots,\n        default: () => [\n          h(\n            TransitionChild,\n            { ...this.$attrs, ...sharedProps, ...passThroughProps },\n            this.$slots.default\n          ),\n        ],\n      },\n      attrs: {},\n      features: TransitionChildRenderFeatures,\n      visible: this.state === TreeStates.Visible,\n      name: 'Transition',\n    })\n  },\n  setup(props) {\n    watchEffect(() => {\n      if (![true, false].includes(props.show)) {\n        throw new Error('A <Transition /> is used but it is missing a `:show=\"true | false\"` prop.')\n      }\n    })\n\n    let state = ref(props.show ? TreeStates.Visible : TreeStates.Hidden)\n\n    let nestingBag = useNesting(() => {\n      state.value = TreeStates.Hidden\n    })\n\n    let initial = { value: true }\n    let transitionBag = {\n      show: computed(() => props.show),\n      appear: computed(() => props.appear || !initial.value),\n    }\n\n    onMounted(() => {\n      watchEffect(() => {\n        initial.value = false\n\n        if (props.show) {\n          state.value = TreeStates.Visible\n        } else if (!hasChildren(nestingBag)) {\n          state.value = TreeStates.Hidden\n        }\n      })\n    })\n\n    provide(NestingContext, nestingBag)\n    provide(TransitionContext, transitionBag)\n\n    return { state }\n  },\n})\n"],"names":["match","value","lookup","returnValue","args","error","Error","Object","keys","map","key","join","captureStackTrace","Features","RenderStrategy","Keys","render","visible","features","None","main","Static","props","_render","unmount","Unmount","Hidden","hidden","style","display","input","attrs","slots","slot","name","object","keysToOmit","clone","assign","omit","as","passThroughProps","children","length","firstChild","other","type","concat","line","cloneVNode","Array","isArray","h","id","useId","Focus","FocusResult","Direction","FocusableMode","focusableSelector","selector","getFocusableElements","container","document","body","from","querySelectorAll","focusElement","element","focus","preventScroll","focusIn","elements","active","activeElement","direction","First","Next","Previous","Last","startIndex","Math","max","indexOf","focusOptions","NoScroll","offset","total","next","undefined","nextIdx","WrapAround","Underflow","Overflow","hasAttribute","setAttribute","Success","useWindowEvent","listener","options","window","addEventListener","onUnmounted","removeEventListener","contains","containers","useFocusTrap","enabled","ref","restoreElement","previousActiveElement","handleFocus","size","initialFocus","couldFocus","restore","watchEffect","onUpdated","event","Tab","preventDefault","shiftKey","previous","toElement","target","HTMLElement","stopPropagation","interactables","Set","originals","Map","inert","original","get","removeAttribute","StackMessage","StackContext","Symbol","useStackContext","inject","useStackProvider","onUpdate","parentUpdate","provide","ForcePortalRootContext","ForcePortalRoot","defineComponent","String","force","Boolean","setup","Portal","forcePortalRoot","groupContext","PortalGroupContext","myTarget","existingRoot","getElementById","root","createElement","appendChild","getPortalRoot","resolveTarget","notify","onInvalidate","domElement","AddElement","RemoveElement","useElemenStack","parentElement","removeChild","Teleport","to","PortalGroup","api","reactive","DescriptionContext","useDescriptions","descriptionIds","register","push","idx","splice","computed","DialogStates","Description","this","context","$props","propsWeControl","entries","reduce","acc","unref","$attrs","$slots","useDescriptionContext","onMounted","dom","$el","DialogContext","useDialogContext","component","err","DisclosureStates","Missing","Dialog","inheritAttrs","open","emits","role","dialogState","Open","titleId","describedby","_this","dialogRef","emit","Closed","internalDialogRef","focusTrapOptions","add","forEach","child","set","getAttribute","has","useInertOthers","message","setTitleId","close","nextTick","Escape","overflow","documentElement","paddingRight","scrollbarWidth","innerWidth","clientWidth","observer","IntersectionObserver","entry","boundingClientRect","x","y","width","height","observe","disconnect","el","DialogOverlay","onClick","handleClick","DialogTitle","DialogDescription","DisclosureContext","useDisclosureContext","ListboxStates","Disclosure","disclosureState","panelRef","toggleDisclosure","DisclosureButton","disabled","ariaControls","onKeydown","handleKeyDown","onKeyup","handleKeyUp","_dom","Space","Enter","DisclosurePanel","FocusTrap","calculateActiveIndex","action","resolvers","items","resolveItems","currentActiveIndex","resolveActiveIndex","activeIndex","nextActiveIndex","findIndex","item","resolveDisabled","slice","reverse","all","Specific","resolveId","Nothing","assertNever","resolvePropValue","property","bag","ListboxContext","useListboxContext","MenuStates","Listbox","modelValue","Number","listboxState","labelRef","buttonRef","optionsRef","searchQuery","activeOptionIndex","closeListbox","openListbox","goToOption","nextActiveOptionIndex","option","dataRef","search","textValue","startsWith","clearSearch","registerOption","unregisterOption","nextOptions","currentActiveOption","a","select","_dom2","defaultPrevented","ListboxLabel","ListboxButton","_dom5","_dom6","ArrowDown","ArrowUp","cb","_dom9","_dom10","requestAnimationFrame","ListboxOptions","_api$options$value$ap","_dom11","_dom12","tabIndex","searchDebounce","clearTimeout","_dom13","Home","PageUp","End","PageDown","_dom14","setTimeout","ListboxOption","Function","required","className","selected","toRaw","_dom15","handleMove","handleLeave","_document$getElementB","textContent","_document$getElementB2","toLowerCase","trim","watch","immediate","_document$getElementB4","scrollIntoView","block","onFocus","onPointermove","onMousemove","onPointerleave","onMouseleave","useTreeWalker","accept","walk","acceptNode","node","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode","MenuContext","useMenuContext","PopoverStates","Menu","menuState","itemsRef","activeItemIndex","closeMenu","openMenu","goToItem","nextActiveItemIndex","registerItem","unregisterItem","nextItems","currentActiveItem","MenuButton","_dom4","_dom7","_dom8","MenuItems","_api$items$value$api$","FILTER_REJECT","FILTER_SKIP","FILTER_ACCEPT","click","MenuItem","_document$getElementB3","PopoverContext","usePopoverContext","Popover","PopoverGroupContext","usePopoverGroupContext","PopoverPanelContext","buttonId","panelId","popoverState","button","panel","togglePopover","closePopover","registerBag","registerPopover","isFocusWithinPopoverGroup","mode","_dom3","Loose","Strict","matches","PopoverButton","isWithinPanel","closeOthers","panelContext","activeElementRef","previousActiveElementRef","focusableElements","previousIdx","PopoverOverlay","PopoverPanel","result","_dom16","buttonIdx","filter","_dom17","_dom18","_dom19","PopoverGroup","groupRef","popovers","unregisterPopover","_dom21","some","popover","LabelContext","useLabelContext","useLabels","labelIds","Label","passive","allProps","RadioGroupContext","useRadioGroupContext","OptionState","RadioGroup","labelledby","radioGroupRef","change","nextValue","orderMap","_radioGroupRef$value","index","sort","z","radio","ArrowLeft","activeOption","find","propsRef","ArrowRight","Reason","RadioGroupOption","firstRadio","checked","state","Active","onBlur","handleBlur","optionRef","Empty","RadioGroupLabel","RadioGroupDescription","GroupContext","SwitchGroup","switchRef","Switch","onKeypress","handleKeyPress","toggle","SwitchLabel","SwitchDescription","disposables","raf","cancelAnimationFrame","nextFrame","timer","dispose","addClasses","classes","classList","removeClasses","remove","transition","base","done","d","_done","called","getComputedStyle","transitionDuration","transitionDelay","split","v","includes","parseFloat","durationMs","Finished","Cancelled","waitForTransition","reason","splitClasses","TreeStates","TransitionContext","NestingContext","hasChildren","Visible","useNesting","transitionableChildren","mounted","unregister","childId","strategy","TransitionChildRenderFeatures","TransitionChild","show","appear","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","useTransitionContext","useParentNesting","initial","isTransitioning","nesting","enterClasses","enterFromClasses","enterToClasses","leaveClasses","leaveFromClasses","leaveToClasses","Comment","data","_oldValues","_newValues","skip","executeTransition","TransitionRoot","sharedProps","nestingBag","transitionBag"],"mappings":"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"}